[gd_scene load_steps=3 format=2]

[ext_resource path="res://bg.jpg" type="Texture" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

onready var m = new_matrix()
var m_size_x = 82
var m_size_y = 50
var m_step = 12.5

var alive = false
var cursor = Vector2(0, 0)
var mid_clicks = 0

func new_matrix():
	var m = []
	for y in range(0, m_size_y):
		var arr = []
		for x in range(0, m_size_x):
			arr.append(false)
		m.append(arr)
	return m

func _draw():
	for y in range(0, m_size_y):
		for x in range(0, m_size_x):
			var X = x * m_step
			var Y = y * m_step
			var S = m_step / 1.5
			if m[y][x]:
				draw_rect(Rect2(Vector2(X, Y), Vector2(S, S)), Color.white)
	# Draw cursor
	m_draw_cursor()

func m_get(x, y):
	if x < 0 or x > m_size_x - 1: return false
	if y < 0 or y > m_size_y - 1: return false
	return m[y][x]

func m_set(x, y, v):
	if x < 0 or x > m_size_x - 1: return
	if y < 0 or y > m_size_y - 1: return
	m[y][x] = v

func m_neighbors_count(x, y):
	var count = 0
	if m_get(x - 1, y - 1): count += 1
	if m_get(x    , y - 1): count += 1
	if m_get(x + 1, y - 1): count += 1
	if m_get(x - 1, y    ): count += 1
	if m_get(x + 1, y    ): count += 1
	if m_get(x - 1, y + 1): count += 1
	if m_get(x    , y + 1): count += 1
	if m_get(x + 1, y + 1): count += 1
	return count

func m_life():
	var ops = []
	
	for y in range(0, m_size_y):
		for x in range(0, m_size_x):
			var n = m_neighbors_count(x, y)
			var alive = m_get(x, y)
			if !alive:
				if n == 3:
					ops.append(Op.new(x, y, true))
			else:
				if !(n == 2 or n == 3):
					ops.append(Op.new(x, y, false))
	for o in ops:
		m[o.y][o.x] = o.life

func _on_Timer_timeout():
	if alive:
		m_life()
	update()

class Op:
	var x
	var y
	var life
	func _init(x, y, life):
		self.x = x
		self.y = y
		self.life = life

func _input(event):
	if event is InputEventMouseButton and event.is_pressed():
		if event.button_index != 3:
			mid_clicks = 0
		if event.button_index == 1:
			var mpos = get_global_mouse_position()
			var x = floor(mpos.x / m_step)
			var y = floor(mpos.y / m_step)
			m_set(x, y, !m_get(x, y))
		elif event.button_index == 2:
			alive = !alive
		elif event.button_index == 3:
			mid_clicks += 1
			if (mid_clicks >= 3):
				mid_clicks = 0
				alive = false
				m_random()
			else:
				m_clear()
	if event is InputEventMouseMotion:
		cursor = get_global_mouse_position()
	update()

func m_draw_cursor():
	var c_x = (floor(cursor.x / m_step) * m_step) + (m_step / 4)
	var c_y = (floor(cursor.y / m_step) * m_step) + (m_step / 4)
	var c_s = m_step / 3
	draw_rect(Rect2(Vector2(c_x, c_y), Vector2(c_s, c_s)), Color.red)

func m_clear():
	for y in range(0, m_size_y):
		for x in range(0, m_size_x):
			m[y][x] = false

func m_random():
	for y in range(0, m_size_y):
		for x in range(0, m_size_x):
			var r = randi() % 2
			var b = false
			if r == 1: b = true
			m[y][x] = b
"

[node name="Node2D" type="Node2D"]

[node name="bg" type="Sprite" parent="."]
position = Vector2( 519.032, 305.365 )
scale = Vector2( 0.772162, 0.727398 )
texture = ExtResource( 1 )

[node name="Draw" type="Node2D" parent="."]
script = SubResource( 1 )

[node name="Timer" type="Timer" parent="."]
wait_time = 0.2
autostart = true
[connection signal="timeout" from="Timer" to="Draw" method="_on_Timer_timeout"]
